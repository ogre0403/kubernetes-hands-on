apiVersion: apps/v1
kind: Deployment
metadata:
  name: nfs-server
spec:
  replicas: 1
  selector:
    matchLabels:
      role: nfs-server
  template:
    metadata:
      labels:
        role: nfs-server
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      serviceAccount: nfs-provisioner
      containers:
        - name: nfs-server
          image: ogre0403/nfs-server:20220112
          # command: ["sleep", "100000"]
          env:
            - name: NFS_EXPORT_0
              value: /export *(rw,sync,no_root_squash,no_all_squash)
          ports:
            - name: nfs
              containerPort: 2049
            - name: mountd
              containerPort: 20048
            - name: rpcbind
              containerPort: 111
          securityContext:
            capabilities:
              add:
                - SYS_ADMIN
                - SETPCAP
            privileged: true
          volumeMounts:
            - name: export-volume
              mountPath: /export
            # - name: exports
            #   mountPath: /etc/
      volumes:
        - name: export-volume
          hostPath:
            path: /srv
        # - name: exports
        #   configMap:
        #     name: exports
        #     items:
        #       - key: exports
        #         path: exports
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: exports
data:
  exports: |-
    /nfs *(rw,sync,no_root_squash,no_all_squash)
---
kind: Service
apiVersion: v1
metadata:
  name: nfs-server
spec:
  ports:
    - name: nfs
      port: 2049
    - name: mountd
      port: 20048
    - name: rpcbind
      port: 111
  selector:
    role: nfs-server
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: nfs-provisioner
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: nfs-provisioner-runner
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["create", "update", "patch"]
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get"]
  - apiGroups: ["extensions"]
    resources: ["podsecuritypolicies"]
    resourceNames: ["nfs-provisioner"]
    verbs: ["use"]
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: run-nfs-provisioner
subjects:
  - kind: ServiceAccount
    name:
      nfs-provisioner
      # replace with namespace where provisioner is deployed
    namespace: default
roleRef:
  kind: ClusterRole
  name: nfs-provisioner-runner
  apiGroup: rbac.authorization.k8s.io
